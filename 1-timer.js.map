{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0].getTime() <= Date.now()) {\n            iziToast.error({\n                title: \"Error\",\n                message: \"Please choose a date in the future\",\n                position: 'topRight',\n            });\n            dataBtn.disabled = true;\n        } else {\n            userSelectedDate = selectedDates[0].getTime();\n            dataBtn.disabled = false;\n        }\n    },\n};\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addZero(value) {\n    return value.toString().padStart(2, \"0\");\n}\n\nfunction updateDisplay({ days, hours, minutes, seconds }) {\n    document.querySelector('[data-days]').textContent = addZero(days);\n    document.querySelector('[data-hours]').textContent = addZero(hours);\n    document.querySelector('[data-minutes]').textContent = addZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addZero(seconds);\n}\n\nlet userSelectedDate;\nlet intervalId;\n\nconst dateCatcher = document.querySelector(\"#datetime-picker\");\nconst dataBtn = document.querySelector('[data-start]');\nconst fp = flatpickr(\"#datetime-picker\", options);\n\ndataBtn.disabled = true;\ndataBtn.addEventListener(\"click\", clickHandler);\n\nfunction countSeconds() {\n    const msDiff = userSelectedDate - Date.now();\n\n    if (msDiff <= 0) {\n        clearInterval(intervalId);\n        dateCatcher.disabled = false;\n        //lalala\n        return;\n    }\n\n    updateDisplay(convertMs(msDiff));\n}\n\nfunction clickHandler(event) {\n    dataBtn.disabled = true;           \n    dateCatcher.disabled = true;  \n    intervalId = setInterval(countSeconds, 1000);\n}\n"],"names":["options","selectedDates","iziToast","dataBtn","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","addZero","value","updateDisplay","intervalId","dateCatcher","flatpickr","clickHandler","countSeconds","msDiff","event"],"mappings":"0IAMA,MAAMA,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAE,QAAO,GAAM,KAAK,OACnCC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EACDC,EAAQ,SAAW,KAEnBC,EAAmBH,EAAc,CAAC,EAAE,QAAO,EAC3CE,EAAQ,SAAW,GAE1B,CACL,EAEA,SAASE,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAQC,EAAO,CACpB,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASC,EAAc,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAQJ,CAAI,EAChE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAQH,CAAK,EAClE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAQF,CAAO,EACtE,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAQD,CAAO,CAC1E,CAEA,IAAIN,EACAU,EAEJ,MAAMC,EAAc,SAAS,cAAc,kBAAkB,EACvDZ,EAAU,SAAS,cAAc,cAAc,EAC1Ca,EAAU,mBAAoBhB,CAAO,EAEhDG,EAAQ,SAAW,GACnBA,EAAQ,iBAAiB,QAASc,CAAY,EAE9C,SAASC,GAAe,CACpB,MAAMC,EAASf,EAAmB,KAAK,IAAG,EAE1C,GAAIe,GAAU,EAAG,CACb,cAAcL,CAAU,EACxBC,EAAY,SAAW,GAEvB,MACH,CAEDF,EAAcR,EAAUc,CAAM,CAAC,CACnC,CAEA,SAASF,EAAaG,EAAO,CACzBjB,EAAQ,SAAW,GACnBY,EAAY,SAAW,GACvBD,EAAa,YAAYI,EAAc,GAAI,CAC/C"}